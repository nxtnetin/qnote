{"version":3,"sources":["components/homeAppbar.js","services/dbService.js","components/notesCard.js","components/newNoteFab.js","pages/homePage.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textAlign","HomeAppbar","classes","className","AppBar","position","color","elevation","Toolbar","IconButton","edge","aria-label","Typography","variant","Button","db","openDB","upgrade","createObjectStore","keyPath","autoIncrement","createIndex","add","val","a","getAll","key","delete","catch","e","console","log","marginBottom","borderBottom","borderRadius","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","NotesCard","props","note","React","useState","anchorEl","setAnchorEl","handleClose","Card","CardHeader","Avatar","action","aria-haspopup","onClick","event","currentTarget","subheader","moment","date","from","id","keepMounted","open","Boolean","onClose","MenuItem","del","then","err","refresh","CardContent","component","body","margin","width","dialogAppbar","inputWrapper","breakpoints","up","minWidth","addNotesInput","border","newNoteFab","bottom","right","NewNoteFab","setOpen","useTheme","fullScreen","useMediaQuery","down","status","setStatus","handleSubmit","preventDefault","Date","now","Fab","Dialog","dialog","maxWidth","aria-labelledby","addNotesForm","noValidate","autoComplete","onSubmit","type","disabled","length","Grid","container","item","xs","InputBase","label","placeholder","multiline","rowsMin","fullWidth","disableUnderline","value","onChange","target","pageContent","unit","HomePage","notes","setNotes","useEffect","getAllNotes","res","initData","n","justify","md","slice","reverse","map","i","App","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.766cb1c0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: \"left\"\r\n  }\r\n}));\r\n\r\nexport default function HomeAppbar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\" elevation={0}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            qNote\r\n          </Typography>\r\n          <Button color=\"inherit\">Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import { openDB } from 'idb';\r\n\r\nconst dbName = 'qnotes';\r\nconst version = 1; //versions start at 1\r\n\r\nconst db = openDB(dbName, version, {\r\n    async upgrade(db) {\r\n      // Create a store of objects\r\n      const store = db.createObjectStore('notes', {\r\n        // The 'id' property of the object will be the key.\r\n        keyPath: 'id',\r\n        // If it isn't explicitly set, create a value by auto incrementing.\r\n        autoIncrement: true,\r\n      });\r\n      // Create an index on the 'date' property of the objects.\r\n      store.createIndex('date', 'date');\r\n    }\r\n  });\r\ndb.catch(e=>{\r\n    console.log({e});\r\n})\r\n\r\n  export async function add(val) {\r\n    return (await db).add('notes', val);\r\n  }\r\n  export async function getAll() {\r\n    return (await db).getAll('notes');\r\n  }\r\n  export async function get(key) {\r\n    return (await db).get('notes', key);\r\n  }\r\n  export async function set(key, val) {\r\n    return (await db).put('notes', val, key);\r\n  }\r\n  export async function del(key) {\r\n    return (await db).delete('notes', key);\r\n  }\r\n  export async function clear() {\r\n    return (await db).clear('notes');\r\n  }\r\n  export async function keys() {\r\n    return (await db).getAllKeys('notes');\r\n  }\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport moment from \"moment\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport { del } from '../services/dbService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginBottom: theme.spacing(1),\r\n    textAlign: \"left\",\r\n    borderBottom: \"solid 1px rgba(0,0,0,0.1)\",\r\n    borderRadius: \"0\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function NotesCard(props) {\r\n  const {note} = props;\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    console.log(\"Delete the note\", note);\r\n    del(note.id).then(e=>{console.log(\"Deleted note.\", e)}).catch(err=>{console.log(err)});\r\n    props.refresh();\r\n  };\r\n  \r\n  return (\r\n    <Card className={classes.root} elevation={0}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            R\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\" aria-haspopup=\"true\" onClick={handleClick}>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title=\"Guest\"\r\n        subheader={moment(note.date).from()}\r\n      />\r\n      <Menu\r\n        id=\"notes-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={handleClose}>Edit</MenuItem>\r\n        <MenuItem onClick={handleClose}>Archive</MenuItem>\r\n        <MenuItem onClick={handleDelete}>Delete</MenuItem>\r\n      </Menu>\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {note.body}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { add } from '../services/dbService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      \"& > *\": {\r\n        margin: theme.spacing(1),\r\n        width: \"25ch\"\r\n      }\r\n    },\r\n    title: {\r\n        flexGrow: '1'\r\n    },\r\n    dialogAppbar:{\r\n        width: \"100%\"\r\n    },\r\n    inputWrapper:{\r\n        margin: theme.spacing(2),\r\n        [theme.breakpoints.up('sm')]: {\r\n            minWidth: \"500px\",\r\n        },\r\n    },\r\n    addNotesInput: {\r\n        border: 'none',\r\n        borderRadius: '0',\r\n        '&:hover': {\r\n        backgroundColor: '#fff',\r\n        },\r\n        '&:focus': {\r\n            border: 'none'\r\n        },\r\n    },\r\n    newNoteFab: {\r\n      position: \"fixed\",\r\n      bottom: \"20px\",\r\n      right: \"20px\"\r\n    }\r\n  }));\r\n\r\nexport default function NewNoteFab(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [status, setStatus] = React.useState(\"\");\r\n  \r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const note = {\r\n      body: status,\r\n      date: Date.now()\r\n    }\r\n    add(note)\r\n      .then(() => {console.log('It worked!')})\r\n      .catch((err) => console.log('It failed!', err));\r\n    props.refresh()\r\n    setOpen(false);\r\n    setStatus(\"\");\r\n  };\r\n  const handleChange = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Fab color=\"primary\" aria-label=\"add\" onClick={handleClickOpen}>\r\n        <AddIcon />\r\n      </Fab>\r\n      <Dialog\r\n        className={classes.dialog}\r\n        maxWidth= \"sm\"\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n          <form\r\n            className={classes.addNotesForm}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            onSubmit={handleSubmit}\r\n        >\r\n        <AppBar elevation={0} color=\"default\" className={classes.dialogAppbar} position=\"static\">\r\n        <Toolbar>\r\n          <IconButton onClick={handleClose} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <ArrowBackIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            New Note\r\n          </Typography>\r\n          <Button type=\"submit\" color=\"inherit\" disabled={status.length === 0}>Save</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n        \r\n            <div className={classes.inputWrapper}>\r\n        <InputBase\r\n          id=\"outlined-basic\"\r\n          className={classes.addNotesInput}\r\n          label=\"\"\r\n          placeholder=\"Start your note...\"\r\n          variant=\"standard\"\r\n          multiline\r\n          rowsMin={4}\r\n          fullWidth\r\n          disableUnderline\r\n          value={status}\r\n          onChange={handleChange}\r\n          height=\"100%\"\r\n        />\r\n        </div>\r\n        \r\n        </Grid>\r\n        </Grid>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect }  from \"react\";\r\nimport HomeAppbar from \"../components/homeAppbar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { getAll } from '../services/dbService';\r\nimport NotesCard from \"../components/notesCard\";\r\nimport NewNoteFab from  \"../components/newNoteFab\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\"\r\n    }\r\n  },\r\n  pageContent: {\r\n    paddingTop: theme.spacing.unit\r\n  },\r\n  newNoteFab: {\r\n    position: \"fixed\",\r\n    bottom: \"20px\",\r\n    right: \"20px\"\r\n  }\r\n}));\r\n\r\nexport default function HomePage() {\r\n  const classes = useStyles();\r\n  const [notes, setNotes] = React.useState();\r\n\r\n  useEffect(() => { \r\n    async function initData(){\r\n      const res = await getAllNotes();\r\n      if(res){\r\n        console.log(\"saturating data\", res)\r\n        setNotes(res);\r\n      }\r\n      if(!res){\r\n        console.log(\"no result\")\r\n      }\r\n    }\r\n    initData(); \r\n  }, []);\r\n\r\n  const getAllNotes = async () => {\r\n    const notes = await getAll()\r\n    .then(function(n){\r\n      setNotes(n);\r\n    })\r\n    .catch((e)=>{console.log(e)});\r\n    \r\n    return notes\r\n  }\r\n \r\n  return (\r\n    <div className=\"homePage\">\r\n      <HomeAppbar />\r\n      \r\n      <Grid container justify=\"center\" className={classes.pageContent}>\r\n        <Grid item xs={12} md={6}>\r\n        {notes && (<div>{notes.length === 0 ? (<p>Start by Adding a note.</p>) : (<div>{notes.slice(0).reverse().map((n,i) => <NotesCard key={i} note={n} refresh={getAllNotes}/>)}</div>)}</div>)}\r\n        </Grid>\r\n      </Grid>\r\n      <div className={classes.newNoteFab}><NewNoteFab refresh={getAllNotes}/></div>\r\n     </div>\r\n  );\r\n}\r\n","import './App.css';\nimport HomePage from \"./pages/homePage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}